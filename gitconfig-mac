[credential]
  helper = osxkeychain
[user]
  name = bokwoon
  email = bokwoon.c@gmail.com
[core]
  pager = less
  excludesfile = ~/.gitignore
  editor = vim
[alias]
  l = "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --reflog"
  ll = "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
  acpush = "!acpush() {\
    if [ $# -eq 0 ];\
    then git add . && git commit -v && git push origin $(git branch | grep \\* | cut -d ' ' -f2);\
    else git add . && git commit -v --message=\"$@\" && git push origin $(git branch | grep \\* | cut -d ' ' -f2);\
    fi;\
    }; acpush"
  fixpush = "!fixpush() {\
    git reset --soft HEAD~1 && git reset .\
    && git stash --include-untracked\
    && git pull --rebase\
    && git stash pop;\
    }; fixpush"
  s = "status"
  b = "branch"
  ra = "reset ."
  rs = "!rs() {\
    git reset --soft HEAD~1 && git reset .;\
    }; rs"
  a = "add"
  aa = "add ."
  ap = "add -p"
  c = "checkout"
  cb = "checkout -b"
  diffc = "diff --cached"
  d = "difftool"
  dc = "difftool --cached"
  pullr = "pull --rebase"
  co = "commit"
  aco = "!aco() {\
    if [ $# -eq 0 ];\
    then git add . && git commit -v;\
    else git add . && git commit -vm \"$@\";\
    fi;\
    }; aco"
  cpush = "!cpush() {\
    git commit -v && git push origin $(git branch | grep \\* | cut -d ' ' -f2);\
    }; cpush"
  pullf = "!pullf() {\
    git fetch --all && git reset --hard origin/$(git branch | grep \\* | cut -d ' ' -f2);\
    }; pullf"
  checkdangling = "fsck --unreachable --no-reflogs"
  prunedangling = "!prunedangling() {\
    git reflog expire --expire-unreachable=now --all;\
    git gc --prune=now;\
    }; prunedangling"
  em = "!em() {\
    [ -z $EDITOR ] && EDITOR='vim';\
    $EDITOR $(git status --porcelain | awk '{print $2}');\
    }; em"
  ec = "!ec() {\
    [ -z $EDITOR ] && EDITOR='vim';\
    git diff --name-only | uniq | xargs $EDITOR;\
    }; ec"
  copyfile = "!copyfile() {\
    git checkout $1 $2;\
    git status;\
    }; copyfile"
  commitall = "!commitall() {\
    if [ $# -eq 0 ];\
    then git add . && git commit -v;\
    else git add . && git commit -vm \"$@\";\
    fi;\
    }; commitall" # aco
  undocommit = "!undocommit() {\
    git reset --soft HEAD~1 && git reset .;\
    }; undocommit" # rs
  commitpush = "!commitpush() {\
    if [ $# -eq 0 ];\
    then git add . && git commit -v && git push origin $(git branch | grep \\* | cut -d ' ' -f2);\
    else git add . && git commit -v --message=\"$@\" && git push origin $(git branch | grep \\* | cut -d ' ' -f2);\
    fi;\
    }; commitpush" # acpush
  rollback = "!rollback() {\
    git checkout $1 && git branch -f master HEAD;\
  }; rollback"
  forcepush = "git push -f"
  forcepull = "!forcepull() {\
    git fetch --all && git reset --hard origin/$(git branch | grep \\* | cut -d ' ' -f2);\
    }; forcepull" # pullf
  stash = "stash --include-untracked"
  unstash = "stash pop"
[diff]
  tool = vimdiff
  algorithm = patience
[pager]
  show = diff-highlight | less
  diff = diff-highlight | less
[difftool]
  prompt = true
  ;set to true if you want to be prompted everytime you open another diff
[commit]
  verbose = true
[pull]
  rebase = true
